1.Package - ləri yükləmək:
microsoft.entityframeworkcore\5.0.1\
microsoft.entityframeworkcore.sqlserver\5.0.1\
microsoft.entityframeworkcore.design\5.0.1\
microsoft.entityframeworkcore.tools\5.0.1\
microsoft.visualstudio.web.codegeneration.design\5.0.2\


2.appsetting.json faylına database kodu yazmaq:
 "ConnectionStrings": {
      "DefaultConnection": "Server=SALIMOV\\SQLEXPRESS;Database=KSdatabase; Trusted_Connection=True; MultipleActiveResultSets=true"
  },



3.wwwroot-da css/fonts/img/js kodların yerləşdirmək


4.Template kodların yerləşdirmək (Views/Home/Index.cshtml, Views/Shared/_Layout.cshtml) və edit.


5.Controllers/HomeController.cs - da edit və Startup.cs - da edit


6.Models/Sayta uygun class.cs - lər yaratmaq.


8.Models/PortoDbContext.cs yaratmaq və ->   

        public PortoDbContext(DbContextOptions<PortoDbContext> options) : base(options) { }

        public DbSet<class> TableName { get; set; }


9.Startup.cs ->
        ConfigureServices(IServiceCollection services){
 
            services.AddDbContext<PortoDbContext>(options =>             
            {
                options.UseSqlServer(Configuration.GetConnectionString("DefaultConnection"));
            });
        }

add-migration addedData
update-database


10.Ümumi ViewModels/HomeVM.cs yaratmaq və daxilində Models/class.cs - lərin List<class> Classes {get;set;} yaratmaq.(Ümumi Dinamik səhifə)


11.HomeController.cs ->

        private readonly PortoDbContext dbContext;
        public HomeController(PortoDbContext _dbContext)
        {
            dbContext = _dbContext;
        }

        public async Task<IActionResult> HomePage()
        {
           
            HomeVM vM = new HomeVM
            {
                Classes = await dbContext.Classes.ToListAsync()
            };

            return View(vM);
        }

ViewImports.cshtml  @using KS.ViewModels

Index.cshtml  yuxarda @model HomeVM

@foreach (Model.Class)

------------------------------------------------------------------------------
Tək Səhifə dinamik (2-сi üsul)

10.Models/PortoDbContext.cs yaratmaq və ->    
    public class PortoDbContext: DbContext
    {
        public PortoDbContext(DbContextOptions<PortoDbContext> options) : base(options) { }

        public DbSet<Class> Classes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Class>().HasData(
            new Class
            {
                ID = 1,
                Image = "photo.jpg",
                Name=" "
                Price = 000,

            },
            new Slider
            {
                ID = 2,
                Image = "photo.jpg",
                Name=" "
                Price = 000,
            });
        }


11.HomeController.cs ->

        private readonly PortoDbContext dbContext;
        public HomeController(PortoDbContext _dbContext)
        {
            dbContext = _dbContext;
        }

        public IActionResult HomePage()
        {
           
           //List<Class> class=dbContext.Classes.ToList()

	   var class = dbContext.Classes.ToList();

           return View(class);
        }


Index.cshtml  yuxarda @model IList<Category>

@foreach (Model)


----------------------------------------------------------------------------------------------------------------
          
                          ADMİN PANEL

1.Startup.cs də app.UseEndpoints əlavə etmək ->
         endpoints.MapControllerRoute(
         name: "areas",
         pattern: "{area:exists}/{controller=HerhansıSehife}/{action=HomePage}/{id?}");
               
2.Areas folder daxilinde "Admin" area yaratmaq. Daxilde Models folderini silmək.


3.Template-də admin folderini (css/fonts/img/js) wwwroot-da yerləşdirmək.


4.Views/Shared folderi yaratmaq ve Razor Layout daxil edib AdminLayout.cshtml yaratmaq ve kodlari kopyalamaq.
Views/ Razor View Start && Views/ Razor View Imports yaratmaq.


5.ViewsStart -> Layout = "AdminLayout" yazmaq
Umumi ViewImports kodlari  Admin/Views/ViewImport-a kopyalamaq.


--------------------CRUD-------------------
6.Controller COPY

7.CRUD-a click-le view elave etmek (CRUD.cshtml) && (CRUD). -> yuxarda @model IList<Class> 

8.CRUD COPY

9.Extension Copy

10.Layihenin oldugu (AdminLayout) head hissesi @RenderSection("styles",false)  axrda(("script",false))

------------------One to one-----------------

1.public class Student
    {
        public int ID { get; set; }
        public string Fullname { get; set; }
        public int GroupID { get; set; }
        public virtual Group Groups { get; set; }
    }

2.public class Group
    {
        public int ID { get; set; }
        public string Name { get; set; }
        public virtual Student Students { get; set; }
    }

3.public class PortoDbContext: DbContext
    {
        public PortoDbContext(DbContextOptions<PortoDbContext> options) : base(options) { }

        public DbSet<Group> GROUP { get; set; }
        public DbSet<Student> STUDENT { get; set; }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.Entity<Group>()
          .HasOne(a => a.Students)
          .WithOne(b => b.Groups)
          .HasForeignKey<Student>(b => b.GroupID);
        }
    }

4.Controller->
        public IActionResult List()
        {
            var studentList = dbContext.STUDENT.Include(x => x.Groups).ToList();

            return View(studentList);
        }

5.List view yaradb Table-i doldurmaq.